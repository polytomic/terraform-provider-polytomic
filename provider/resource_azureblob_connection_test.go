// Code generated by Polytomic. DO NOT EDIT.
// edit connections.yaml and re-run go generate

package provider

import (
	"context"
	"fmt"
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
)

func TestAccAzureblobConnection(t *testing.T) {
	name := "TestAcc"
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			// Missing configuration
			{
				Config:      testAccAzureblobConnectionResourceNoConfig(name),
				ExpectError: regexp.MustCompile("The argument \"configuration\" is required, but no definition was found."),
			},
			// Empty configuration
			{
				Config:      testAccAzureblobConnectionResourceMissingRequired(name),
				ExpectError: regexp.MustCompile("Inappropriate value for attribute \"configuration\":"),
			},
			{
				Config: testAccAzureblobConnectionResource(name),
				Check: resource.ComposeTestCheckFunc(
					// Check if the resource exists
					testAccAzureblobConnectionExists(name),
					// Check the name
					resource.TestCheckResourceAttr("polytomic_azureblob_connection.test", "name", name),
				),
			},
		},
	})
}

func testAccAzureblobConnectionExists(name string) resource.TestCheckFunc {
	return func(s *terraform.State) error {
		_, ok := s.RootModule().Resources["polytomic_azureblob_connection.test"]
		if !ok {
			return fmt.Errorf("not found: %s", "polytomic_azureblob_connection.test")
		}

		client := testClient()
		connections, err := client.Connections().List(context.TODO())
		if err != nil {
			return err
		}
		var found bool
		for _, connection := range connections {
			if connection.Name == name {
				found = true
				break
			}
		}

		if !found {
			return fmt.Errorf("connection %s not found", name)
		}

		return nil

	}
}

func testAccAzureblobConnectionResource(name string) string {
	return fmt.Sprintf(`
resource "polytomic_azureblob_connection" "test" {
	name          = "%s"
	configuration = {
   account_name = "my-account"
   access_key = "abcdefghijklmnopqrstuvwxyz0123456789=="
   container_name = "my-container"
   }
}
`, name)
}

func testAccAzureblobConnectionResourceNoConfig(name string) string {
	return fmt.Sprintf(`
resource "polytomic_azureblob_connection" "test" {
	name          = "%s"
}
`, name)
}

func testAccAzureblobConnectionResourceMissingRequired(name string) string {
	return fmt.Sprintf(`
resource "polytomic_azureblob_connection" "test" {
	name          = "%s"
	 configuration = {}
}`, name)
}
